// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleStore.Inventories.Infrastructure.EfCore.Persistence;

namespace SimpleStore.Inventories.Infrastructure.EfCore.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    partial class InventoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SimpleStore.Inventories.Domain.Models.Inventory", b =>
                {
                    b.Property<Guid>("InventoryId")
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InventoryId");

                    b.ToTable("Inventory");

                    b.HasData(
                        new
                        {
                            InventoryId = new Guid("8481c547-5c86-4ab0-9b1d-feca5f83dc50"),
                            Location = "Inventory-1-Location",
                            Name = "Inventory-1"
                        },
                        new
                        {
                            InventoryId = new Guid("3cc932b6-30e2-49ae-81be-8e60fbd2d099"),
                            Location = "Inventory-2-Location",
                            Name = "Inventory-2"
                        },
                        new
                        {
                            InventoryId = new Guid("6312e285-4ddf-49f1-bb48-748cf0007f8f"),
                            Location = "Inventory-3-Location",
                            Name = "Inventory-3"
                        });
                });

            modelBuilder.Entity("SimpleStore.Inventories.Domain.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("4a2abe51-e895-49be-878a-0729535ba92e"),
                            Code = "PRD-1"
                        },
                        new
                        {
                            ProductId = new Guid("1d250f1d-1546-47f3-92d2-31fbf87a3511"),
                            Code = "PRD-2"
                        },
                        new
                        {
                            ProductId = new Guid("4012d62c-2bea-42eb-9e64-d7b22185c4f0"),
                            Code = "PRD-3"
                        });
                });

            modelBuilder.Entity("SimpleStore.Inventories.Domain.Models.ProductInventory", b =>
                {
                    b.Property<Guid>("ProductInventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CanPurchase")
                        .HasColumnType("bit");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductInventoryId");

                    b.HasIndex("InventoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductInventory");

                    b.HasData(
                        new
                        {
                            ProductInventoryId = new Guid("82165589-744e-46fe-9262-3fd9c4d150d8"),
                            CanPurchase = true,
                            InventoryId = new Guid("8481c547-5c86-4ab0-9b1d-feca5f83dc50"),
                            ProductId = new Guid("4a2abe51-e895-49be-878a-0729535ba92e"),
                            Quantity = 10
                        },
                        new
                        {
                            ProductInventoryId = new Guid("54da83c1-978f-4486-906a-04a292513c43"),
                            CanPurchase = true,
                            InventoryId = new Guid("8481c547-5c86-4ab0-9b1d-feca5f83dc50"),
                            ProductId = new Guid("4012d62c-2bea-42eb-9e64-d7b22185c4f0"),
                            Quantity = 5
                        },
                        new
                        {
                            ProductInventoryId = new Guid("e7404688-e264-4276-9053-a83650637dc6"),
                            CanPurchase = true,
                            InventoryId = new Guid("3cc932b6-30e2-49ae-81be-8e60fbd2d099"),
                            ProductId = new Guid("4a2abe51-e895-49be-878a-0729535ba92e"),
                            Quantity = 3
                        },
                        new
                        {
                            ProductInventoryId = new Guid("f7d9408b-adf3-4b92-ae9a-f08f1fa50f11"),
                            CanPurchase = true,
                            InventoryId = new Guid("3cc932b6-30e2-49ae-81be-8e60fbd2d099"),
                            ProductId = new Guid("1d250f1d-1546-47f3-92d2-31fbf87a3511"),
                            Quantity = 1
                        },
                        new
                        {
                            ProductInventoryId = new Guid("17ff10f9-8bb3-4467-8265-f1018c7c4748"),
                            CanPurchase = true,
                            InventoryId = new Guid("6312e285-4ddf-49f1-bb48-748cf0007f8f"),
                            ProductId = new Guid("1d250f1d-1546-47f3-92d2-31fbf87a3511"),
                            Quantity = 9
                        },
                        new
                        {
                            ProductInventoryId = new Guid("4ae132f8-c42f-4d2a-be63-68f3346e51a3"),
                            CanPurchase = true,
                            InventoryId = new Guid("6312e285-4ddf-49f1-bb48-748cf0007f8f"),
                            ProductId = new Guid("4012d62c-2bea-42eb-9e64-d7b22185c4f0"),
                            Quantity = 8
                        });
                });

            modelBuilder.Entity("SimpleStore.Inventories.Domain.Models.ProductInventory", b =>
                {
                    b.HasOne("SimpleStore.Inventories.Domain.Models.Inventory", "Inventory")
                        .WithMany("Products")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleStore.Inventories.Domain.Models.Product", "Product")
                        .WithMany("Inventories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
